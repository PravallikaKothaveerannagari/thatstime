// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Models;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.Models.FriendInvites", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("SenderUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SenderUserId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("FriendInvites");
                });

            modelBuilder.Entity("webapi.Models.FriendsList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FirstUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("SecondUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FirstUserId");

                    b.HasIndex("SecondUserId");

                    b.ToTable("FriendsLists");
                });

            modelBuilder.Entity("webapi.Models.GroupInvites", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("TargetUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("GroupInvites");
                });

            modelBuilder.Entity("webapi.Models.GroupMemberList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoleId");

                    b.ToTable("GroupMemberLists");
                });

            modelBuilder.Entity("webapi.Models.GroupsCreatorsList", b =>
                {
                    b.Property<long>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GroupId"));

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGroupClosed")
                        .HasColumnType("bit");

                    b.HasKey("GroupId");

                    b.HasIndex("CreatorId");

                    b.ToTable("GroupsCreatorsLists");
                });

            modelBuilder.Entity("webapi.Models.MemberRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("MemberRoles");
                });

            modelBuilder.Entity("webapi.Models.Record", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<bool>("IsRecordForGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecordForYourSelf")
                        .HasColumnType("bit");

                    b.Property<string>("RecordContent")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RecordName")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("RelatedGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RelatedUserId")
                        .HasColumnType("bigint");

                    b.HasKey("RecordId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("RelatedGroupId");

                    b.HasIndex("RelatedUserId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("webapi.Models.UserInfo", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("webapi.Models.FriendInvites", b =>
                {
                    b.HasOne("webapi.Models.UserInfo", "SenderUserInfo")
                        .WithMany("SenderUsers")
                        .HasForeignKey("SenderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.UserInfo", "TargetUserInfo")
                        .WithMany("TargetUsers")
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SenderUserInfo");

                    b.Navigation("TargetUserInfo");
                });

            modelBuilder.Entity("webapi.Models.FriendsList", b =>
                {
                    b.HasOne("webapi.Models.UserInfo", "FirstUserInfo")
                        .WithMany("FirstFromFriendList")
                        .HasForeignKey("FirstUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.UserInfo", "SecondUserInfo")
                        .WithMany("SecondFromFriendList")
                        .HasForeignKey("SecondUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FirstUserInfo");

                    b.Navigation("SecondUserInfo");
                });

            modelBuilder.Entity("webapi.Models.GroupInvites", b =>
                {
                    b.HasOne("webapi.Models.GroupsCreatorsList", "GroupEntity")
                        .WithMany("GroupInvites")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.UserInfo", "UserEntity")
                        .WithMany("GroupInvites")
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GroupEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("webapi.Models.GroupMemberList", b =>
                {
                    b.HasOne("webapi.Models.GroupsCreatorsList", "RelatedGroup")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.UserInfo", "RelatedUser")
                        .WithMany("GroupMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("webapi.Models.MemberRole", "Role")
                        .WithMany("Members")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RelatedGroup");

                    b.Navigation("RelatedUser");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("webapi.Models.GroupsCreatorsList", b =>
                {
                    b.HasOne("webapi.Models.UserInfo", "Creator")
                        .WithMany("CreatorOfGroups")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("webapi.Models.Record", b =>
                {
                    b.HasOne("webapi.Models.UserInfo", "CreatorUser")
                        .WithMany("RecordsCreators")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("webapi.Models.GroupsCreatorsList", "RelatedGroup")
                        .WithMany("RecordsForThisGroup")
                        .HasForeignKey("RelatedGroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("webapi.Models.UserInfo", "RelatedUser")
                        .WithMany("RecordsForThisUser")
                        .HasForeignKey("RelatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatorUser");

                    b.Navigation("RelatedGroup");

                    b.Navigation("RelatedUser");
                });

            modelBuilder.Entity("webapi.Models.GroupsCreatorsList", b =>
                {
                    b.Navigation("GroupInvites");

                    b.Navigation("GroupMembers");

                    b.Navigation("RecordsForThisGroup");
                });

            modelBuilder.Entity("webapi.Models.MemberRole", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("webapi.Models.UserInfo", b =>
                {
                    b.Navigation("CreatorOfGroups");

                    b.Navigation("FirstFromFriendList");

                    b.Navigation("GroupInvites");

                    b.Navigation("GroupMembers");

                    b.Navigation("RecordsCreators");

                    b.Navigation("RecordsForThisUser");

                    b.Navigation("SecondFromFriendList");

                    b.Navigation("SenderUsers");

                    b.Navigation("TargetUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
